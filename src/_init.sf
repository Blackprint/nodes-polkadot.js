.js will run first before .sf

## js-global
// This script will run first, and then the other .sf files
// depends on blackprint.config.js configuration

// Prepare stuff when the page is loading
// maybe like loading our dependencies for the nodes

/* If you have loaded any dependency from ./init.js can also wait from here
 * Warning: When using this, you must modify wrapped:'mjs' to wrapped:'async-mjs'
 * on blackprint.config.js, to avoid circular waiting (because this module also waiting)
 *
 * Info: imports.task() == sf.loader.task;
 */
await imports.task();


// Because .js and .sf is separated
// we also need to call LoadScope just like _init.js
let Blackprint = await window.Blackprint.loadScope({
	// You can find the URL on Blackprint menu -> Modules
	// This will also be exported to JSON if this module's nodes is being used
	url: import.meta.url,
});

// Global shared context
let Context = Blackprint.getContext('Polkadot.js');

// if _init.js haven't been initialized
if(Context.EventSlot === void 0){
	await new Promise(r=> setTimeout(r, 500));
	await imports.task();
}

if(!Context.EventSlot)
	console.log("Race condition");